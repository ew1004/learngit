在MySQL 5.7 password字段已从mysql.user表中删除，新的字段名是“authenticalion_string”.
选择数据库：use mysql;
更新root的密码：update user set authentication_string=password('新密码') where user='root' and Host='localhost';
刷新权限：flush privileges;
##########################
启动mysql：net start mysql

进入root用户：mysql -u root -p   （密码：mysql）
数据库：mypy   表：staff
        wyj        car，phone
退出：quit或exit

select version（）； 显示版本
select now（）； 显示时间
##########################
远程连接
    格式：mysql -h ip地址 -u 用户名 -p
    输入对方密码
数据库操作
    创建数据库：create database 数据库名 charset=utf8;
    删除数据库：drop database 数据库名；
    切换数据库：use 数据库名；
    查看当前数据库：select database()；
表操作
    查看当前数据库表：show tables；
    删除表：drop table 表名；
    创建表：create table 表名（列及类型）；
	    例：create table student(id int auto_increment primary key,
                                     name varchar(20) not null，isDelete bit default 0）；
            说明：auto_increment 表示自增长
                  primary key 表示主键
                  not null 表示不为空
                  default 0 表示默认为0
    查看表结构：desc 表名；
    查看建表语句：show create table 表名；
    重命名表名：rename table 原表名 to 新表名；
    修改表结构（不建议修，创建时构思好表结构，可以预留几个空列）
              alter table 表名 add|change|drop 列名 类型；
              例：alter table car add licheng int;
数据操作
    增：全列插入 insert into 表名 values（）；主键列是自动增长，但全列插入时需占位，通常使用0，插入成功以后以实际数据为准
          例：insert into car values(0,"奇骏"，0，32000）；
        缺省插入 insert into 表名 （列1，列2。。。） values（值1，值2。。。）
          例：insert into car (name,licheng) values("长城"，76000)
        同时插入多条数据 inser into 表名 values（），（），。。。；
    查：查询全部数据 select * from 表名；
    删：delete from 表名 where 条件；
        例：delete from car where id=1;
    改：update 表名 set 列1=值1，...where 条件；
        例：update car name="奇骏2.0" where id=1;
    ####不加条件会删所有，改所有列
    查：select * from 表名；
        *可为列名，为*则查所有列，列名后加as为列起个别名，仅显示集中，不改原表列名，多列查询加逗号
        select distinct 列名 from 表名；去重复查询
        条件查询：select * from 表名 where 条件；
                  例：select * from staff where id=2;查id=2的数据
                      select * from staff where id<4 and gender=0;
        模糊查询：select * from staff where name like "王%";查名字为“王*”
		  %任意多个字符  _任意一个字符
	范围查询：select *from staff where id in (1,3);查询id为1，3的
		  select *from staff where id between 1 and 3;查询id为1，2,3的
	空判断：  null与“”不同
                  where name is null;    is not null;
	优先级：  小括号，not，比较，逻辑    and高于or    
    聚合：count(*) 计算总行数
	   max(列)  求此列最大
           min(列)  求此列最小
	   sum(列)  求此列的和
	   avg(列)  求此列的均值
           例：select count(*) from staff;
               select max(age) form staff where gender=0;查女生年龄最大
    分组：按字段分组，此字段相同数据放到一个结果集，分组后只能查询相同数据
	   select 列1，列2，聚合... from 表名 group by 列1，列2... 
           例：select gender from staff group by gender;性别分组，等同与性别去重
               select gender,count(*) from staff group by gender;分组，并显示每组总行数
	       select 列1，列2，聚合... from 表名 group by 列1，列2... having 列1，列2...
    排序：select * from 表名 order by 列1 asc|desc,列2 asc|desc ...
           将数据按列1排序，若同，按列2排序，默认从小到大 asc升序，desc降序
    分页：select * from 表名 limit start,count; start 开始数，count查看数量
    关联：
        建表语句：
        1  create table class(id int auto_increment primary key,name varchar(20) not null,stuNum int not null);
        2  create table student(id int auto_increment primary key,name varchar(20) not null,gender bit default 1,classid int not null,foreign key(classid) references class(id));
        插入数据：
        insert into class values(0,"一班",50),(0,"二班",40),(0,"三班",55);
        insert into student values(0,"tiger",0,1),(0,"dog",0,2),(0,"pig",0,3),(0,"cat",1,2);
        关联查询：
        select student.name,class.name from class inner join student on class.id=student.classid;
        inner join ;left join; right join;










